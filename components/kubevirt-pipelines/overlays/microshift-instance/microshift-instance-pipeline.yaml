---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: fedora-example
spec:
  tasks:
    - name: modify-data-object
      params:
        - name: manifest
          value: |
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              generateName: microshift-
            spec:
              sourceRef:
                kind: DataSource
                name: rhel9
                namespace: openshift-virtualization-os-images
              storage:
                resources:
                  requests:
                    storage: 30Gi
        - name: waitForSuccess
          value: 'true'
      taskRef:
        kind: Task
        name: modify-data-object
    - name: generate-ssh-keys
      params:
        - name: privateKeyConnectionOptions
          value:
            - 'user:fedora'
            - 'disable-strict-host-key-checking:true'
      taskRef:
        kind: Task
        name: generate-ssh-keys
      runAfter:
        - modify-data-object
    - name: create-vm-from-manifest
      params:
        - name: manifest
          value: |
            apiVersion: kubevirt.io/v1
            kind: VirtualMachine
            metadata:
              generateName: microshift-vm-
              annotation:
                description: Fedora VM generated by fedora-example pipeline
              labels:
                app: microshift-vm
            spec:
              running: true
              template:
                metadata:
                  labels:
                    kubevirt.io/domain: microshift-vm
                spec:
                  accessCredentials:
                    - sshPublicKey:
                        source:
                          secret:
                            secretName: $(tasks.generate-ssh-keys.results.publicKeySecretName)
                        propagationMethod:
                          configDrive: {}
                  domain:
                    cpu:
                      cores: 2
                      sockets: 1
                      threads: 1
                    devices:
                      disks:
                        - name: rootdisk
                          bootOrder: 1
                          disk:
                            bus: virtio
                        - name: cloudinitdrive
                          disk:
                            bus: virtio
                      interfaces:
                        - bridge: {}
                          name: default
                      networkInterfaceMultiqueue: true
                      rng: {}
                    resources:
                      requests:
                        memory: 4Gi
                  hostname: microshift-vm
                  networks:
                    - name: default
                      pod: {}
                  volumes:
                    - name: rootdisk
                    - name: cloudinitdrive
                      cloudInitConfigDrive:
                        userData: |
                          #cloud-config
                          user: microshift
                          password: r3dh@t2024
                          chpasswd: { expire: False }
        - name: ownDataVolumes
          value:
            - "rootdisk:$(tasks.modify-data-object.results.name)"
      runAfter:
        - generate-ssh-keys
      taskRef:
        kind: Task
        name: create-vm-from-manifest
    - name: execute-in-vm
      params:
        - name: vmName
          value: $(tasks.create-vm-from-manifest.results.name)
        - name: secretName
          value: $(tasks.generate-ssh-keys.results.privateKeySecretName)
        - name: script
          value: |
            sudo subscription-manager repos \
            --enable rhocp-4.15-for-rhel-9-$(uname -m)-rpms \
            --enable fast-datapath-for-rhel-9-$(uname -m)-rpms
      runAfter:
        - create-vm-from-manifest
      taskRef:
        kind: Task
        name: execute-in-vm